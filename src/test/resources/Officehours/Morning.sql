---- PRACTICE 1 ----


--4. List all the different region_ids in countries table
        SELECT DISTINCT REGION_ID FROM COUNTRIES;

    -- GET ME ALL DIFFERENT FIRSTNAME  FROM EMPLOYEES TABLE
        SELECT DISTINCT FIRST_NAME FROM EMPLOYEES; --91

        SELECT DISTINCT FIRST_NAME,LAST_NAME FROM EMPLOYEES; --107


--5. Display the salary of the employee Grant Douglas (lastName: Grant, firstName: Douglas)
        SELECT SALARY FROM EMPLOYEES
        WHERE FIRST_NAME='Douglas' AND LAST_NAME='Grant';


--6. Display all department information from departments table
-- if the department name values are as below
-- IT , Public Relations , Sales , Executive

        --> OPT 1
        SELECT * FROM DEPARTMENTS
        WHERE DEPARTMENT_NAME='IT' OR DEPARTMENT_NAME='Public Relations' OR DEPARTMENT_NAME='Sales' OR DEPARTMENT_NAME='Executive';

        --> OPT 2
        SELECT * FROM DEPARTMENTS
        WHERE DEPARTMENT_NAME IN ('IT','Public Relations','Sales','Executive');

        --> GET ME ALL DEPARTMENT NAMES EXCEPT FOLLOWINGS --> 'IT','Public Relations','Sales','Executive'
        SELECT * FROM DEPARTMENTS
        WHERE DEPARTMENT_NAME NOT IN ('IT','Public Relations','Sales','Executive');


-- 16 . Display all unique job_id that ends with CLERK in employee table
        SELECT  DISTINCT JOB_ID FROM EMPLOYEES
        WHERE JOB_ID LIKE '%CLERK';
        /*
            - % --> 0 or more letter
            - _ --> only single letter

         */
        -- CAN WE RETRIEVE SAME DATA BY USING JOBS TABLE
        SELECT JOB_ID FROM JOBS
        WHERE JOB_ID LIKE '%CLERK';
        -- SINCE JOB_ID PK for JOBS TABLE WE DON'T NEED TO USE DISTINCT

-- 20-4 How many employees are  in each group that have minimum
-- salary of 5000 ? (Group based on job_id )
        SELECT JOB_ID,COUNT(*) FROM EMPLOYEES
        WHERE SALARY>5000
        GROUP BY JOB_ID;

        SElECT JOB_ID,SALARY FROM EMPLOYEES
        WHERE SALARY>5000;

-- 21. display all job_id and average salary who work as any of these jobs
-- IT_PROG,SA_REP, FI_ACCOUNT, AD_VP
        -- WHERE
        SELECT JOB_ID,AVG(SALARY) FROM EMPLOYEES
        WHERE JOB_ID IN ('IT_PROG','SA_REP', 'FI_ACCOUNT', 'AD_VP')
        GROUP BY JOB_ID;

        -- HAVING --> INEFFICIENT
        SELECT JOB_ID,AVG(SALARY) FROM EMPLOYEES
        GROUP BY JOB_ID
        HAVING JOB_ID IN ('IT_PROG','SA_REP', 'FI_ACCOUNT', 'AD_VP');

        -- DISPLAY JOB IDS WHERE THEIR AVG SALARY IS LESS THAN 10000
        SELECT JOB_ID,AVG(SALARY) FROM EMPLOYEES
        WHERE JOB_ID IN ('IT_PROG','SA_REP', 'FI_ACCOUNT', 'AD_VP')
        GROUP BY JOB_ID
        HAVING AVG(SALARY)<10000;

        SELECT * FROM EMPLOYEES;


-- 23. Display total salary for each department except department_id 50, and  where total salary more than 30000
        SELECT DEPARTMENT_ID,SUM(SALARY) FROM EMPLOYEES
        WHERE DEPARTMENT_ID<>50
        GROUP BY DEPARTMENT_ID
        HAVING SUM(SALARY)>30000;

        --> <> and != will refer NOT EQUAL

        -- ORDER RESULT BASED ON TOTAL SALARY IN DESC
        SELECT DEPARTMENT_ID,SUM(SALARY) AS TOTAL_SALARY FROM EMPLOYEES
        WHERE DEPARTMENT_ID<>50
        GROUP BY DEPARTMENT_ID
        HAVING SUM(SALARY)>30000
        ORDER BY TOTAL_SALARY DESC;


---- PRACTICE 2 ----
--8.  Find the 3rd maximum salary from the employees table (do not include duplicates)

        --STEP 1 --> FIND ALL SALARY Ä±N DESC ORDERS
        SELECT DISTINCT SALARY FROM EMPLOYEES
        ORDER BY SALARY DESC;

        --STEP 2 --> FIND ALL 3RD HIGHEST SALARY
        SELECT MIN(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                       ORDER BY SALARY DESC)
        WHERE ROWNUM<4; -- 14000

        --STEP 3 --> GET ME ALL EMPLOYEES WHO IS GETTING 3rd MAX SALARY
         SELECT * FROM EMPLOYEES
         WHERE SALARY=(SELECT MIN(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                                                ORDER BY SALARY DESC)
                       WHERE ROWNUM<4);

        --> IQ --> GET ME ALL EMPLOYEES WHO IS GETTING 213th MAX SALARY
        SELECT * FROM EMPLOYEES
        WHERE SALARY=(SELECT MIN(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                                               ORDER BY SALARY DESC)
              WHERE ROWNUM<214);



        SELECT SALARY FROM EMPLOYEES;

--12. Find the 3rd minimum salary from the employees table (do not include duplicates)

        --STEP 1 --> FIND ALL SALARY IN DESC ORDERS
        SELECT DISTINCT SALARY FROM EMPLOYEES
        ORDER BY SALARY ASC;

        --STEP 2 --> FIND ALL 3RD MIN SALARY
        SELECT MAX(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                       ORDER BY SALARY ASC)
        WHERE ROWNUM<4; -- 2400

        --STEP 3 --> GET ME ALL EMPLOYEES WHO IS GETTING 3rd MIN SALARY
        SELECT * FROM EMPLOYEES
        WHERE SALARY=(SELECT MAX(SALARY) FROM (SELECT DISTINCT SALARY FROM EMPLOYEES
                                               ORDER BY SALARY ASC)
                      WHERE ROWNUM<4);



---- PRACTICE 3 ----
SELECT * FROM EMPLOYEES;
    -- TJ DEPARTMENTID --> 50
SELECT * FROM DEPARTMENTS;
    -- 50 --> SHIPPING --> 1500
SELECT * FROM LOCATIONS;
    --> 1500 --> CALIFORNIA US
SELECT * FROM COUNTRIES;
    --> US --> United States of America
SELECT * FROM REGIONS;
    --> REGION ID 2 ---> Americas

    -- TJ -- SHIPPING -- CALIFORNIA -- US -- United States of America - Americas


-- 1. FIND OUT COUNTRY NAME AND REGION NAME FROM COUNTRIES AND  REGION TABLE
        SELECT COUNTRY_NAME,REGION_NAME
        FROM COUNTRIES C INNER JOIN REGIONS R
                 ON  C.REGION_ID=R.REGION_ID ;

    -- HOW MANY COUNTRY WE HAVE FOR EACH REGION NAME
        SELECT REGION_NAME,COUNT(*)
        FROM COUNTRIES C INNER JOIN REGIONS R
                    ON  C.REGION_ID=R.REGION_ID
        GROUP BY REGION_NAME;

    -- DISPLAY REGIONS WHICH HAS MORE THAN 5 COUNTRY

        SELECT REGION_NAME,COUNT(*)
        FROM COUNTRIES C INNER JOIN REGIONS R
            ON  C.REGION_ID=R.REGION_ID
        GROUP BY REGION_NAME
        HAVING COUNT(*)>5;

-- INNER JOIN SAME WITH JOIN
-- 3.  FIND OUT DEPARTMENT_NAME AND CITY
        SELECT DEPARTMENT_NAME,CITY
        FROM DEPARTMENTS D JOIN LOCATIONS L
            ON D.LOCATION_ID=L.LOCATION_ID;

    -- HOW MANY DEPARTMENT WE HAVE IN EACH CITY
        SELECT CITY,COUNT(*)
        FROM DEPARTMENTS D JOIN LOCATIONS L
            ON D.LOCATION_ID=L.LOCATION_ID
        GROUP BY CITY;



-- 5.  FIND OUT FIRST_NAME, LAST NAME, DEPARTMENT ID , DEPARTMENT NAME FOR DEPARTMENT ID 80 OR 40
        SELECT FIRST_NAME, LAST_NAME, E.DEPARTMENT_ID ,D.DEPARTMENT_ID, DEPARTMENT_NAME
        FROM EMPLOYEES E INNER JOIN DEPARTMENTS D
            ON E.DEPARTMENT_ID=D.DEPARTMENT_ID
        WHERE D.DEPARTMENT_ID IN (40,80);


-- 7. FIND OUT EMPLOYEES FIRST_NAME , JOB_TITLE , DEPARTMENT_NAME ,  CITY
        SELECT FIRST_NAME , JOB_TITLE , DEPARTMENT_NAME ,  CITY
        FROM JOBS J
                INNER JOIN EMPLOYEES E ON J.JOB_ID = E.JOB_ID
                INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID=D.DEPARTMENT_ID
                INNER JOIN LOCATIONS L ON D.LOCATION_ID=L.LOCATION_ID;

-- 8. FIND OUT EMPLOYEES FIRST_NAME , JOB_TITLE , DEPARTMENT_NAME ,CITY , COUNTRY_NAME , REGION_NAME


-- 11 .FIND OUT DEPARTMENT_NAME , LOCATION_ID , AND COUNTRY_NAME INCLUDING THOSE COUNTRIES WITH NO DEPARTMENT


----- SELF JOIN ---
-- Display all managers and their managers information
    SELECT EMPLOYEE_ID,FIRST_NAME,LAST_NAME,MANAGER_ID FROM EMPLOYEES;

    SELECT WORKERS.FIRST_NAME,WORKERS.LAST_NAME,WORKERS.MANAGER_ID,
         MANAGERS.EMPLOYEE_ID,MANAGERS.FIRST_NAME,MANAGERS.LAST_NAME
    FROM EMPLOYEES WORKERS  INNER JOIN  EMPLOYEES MANAGERS
            ON WORKERS.MANAGER_ID=MANAGERS.EMPLOYEE_ID;

    -- STEVEN
    SELECT WORKERS.FIRST_NAME,WORKERS.LAST_NAME,WORKERS.MANAGER_ID,
           MANAGERS.EMPLOYEE_ID,MANAGERS.FIRST_NAME,MANAGERS.LAST_NAME
    FROM EMPLOYEES WORKERS  LEFT JOIN  EMPLOYEES MANAGERS
                                    ON WORKERS.MANAGER_ID=MANAGERS.EMPLOYEE_ID;


--IQ -->  Given the Employee table, write a SQL query that finds out employees who earn more than their managers.


